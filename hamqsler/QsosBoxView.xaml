<local:CardItemView x:Class="hamqsler.QsosBoxView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:hamqsler"
	Canvas.Left="{Binding Path=ItemData.DisplayX}" 
	Canvas.Top="{Binding Path=ItemData.DisplayY}">
	<local:CardItemView.Resources>
		<local:MarginConverter x:Key="MarginConverter"/>
		<local:AdifToYYYYMMDDDateConverter x:Key="YYYYMMDDConverter"/>
		<local:AdifToDDMMMYYDateConverter x:Key="DDMMMYYConverter"/>
		<local:AdifToDDMMYYDateConverter x:Key="DDMMYYConverter"/>
		<local:QslRcvdToPseTnxConverter x:Key="PseTnxConverter"/>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
	
		<local:QsosBoxView x:Key="QBView"/>
	</local:CardItemView.Resources>
	<Canvas>
 		<Canvas x:Name="DisplayCanvas">
  			<Canvas.Clip>
				<RectangleGeometry Rect="{Binding Path=ClipRectangle}"/>
			</Canvas.Clip>
			<Rectangle x:Name="QsosBoxRectangle" Width="{Binding Path=ItemData.DisplayWidth}"
					   Height="{Binding Path=ActualHeight, ElementName=DisplayPanel}"
					   StrokeThickness="2.0" Stroke="Transparent"
			           Fill="{Binding Path=ItemData.BackgroundBrush}"
			           Opacity="{Binding Path=ItemData.BackgroundOpacity}"
					   RadiusX="{Binding Path=CornerRounding}" 
			           RadiusY="{Binding Path=CornerRounding}">
			</Rectangle>
			<Rectangle Width="{Binding Path=ItemData.DisplayWidth}"
					   Height="{Binding Path=ActualHeight, ElementName=DisplayPanel}"
					   StrokeThickness="2.0" Stroke="{Binding Path=ItemData.LineTextBrush}"
					   RadiusX="{Binding Path=CornerRounding}" 
			           RadiusY="{Binding Path=CornerRounding}">
			</Rectangle>
 			<StackPanel x:Name="DisplayPanel">
	 			<StackPanel Orientation="Horizontal" Canvas.Left="{Binding Path=ConfirmingXOffset}"
	 						Canvas.Top="{Binding Path=ConfirmingYOffset}">
	 				<TextBlock Text="{Binding Path=ConfirmingDisplayText}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							Foreground="{Binding Path=ItemData.LineTextBrush}">
	 					<TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ZeroOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
	 				</TextBlock>
	 				<TextBlock VerticalAlignment="Center" Text="{Binding Path=Callsign}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							FontWeight="Bold"
							Foreground="{Binding Path=ItemData.CallsignBrush}">
	 					 <TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
					</TextBlock>
	 				<TextBlock VerticalAlignment="Center" Text="{Binding Path=ItemData.ViaText}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							Foreground="{Binding Path=ItemData.ManagerBrush}">
	 					<TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ZeroOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ZeroOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
	 					<TextBlock.Style>
	 						<Style TargetType="{x:Type TextBlock}">
	 							<Style.Triggers>
	 								<DataTrigger Binding="{Binding Path=ItemData.ShowManager}" Value="False">
	 									<Setter Property="Visibility" Value="Collapsed"/>
	 								</DataTrigger>
	 								<DataTrigger Binding="{Binding Path=Manager}" Value="">
	 									<Setter Property="Visibility" Value="Collapsed"/>
	 								</DataTrigger>
	  							</Style.Triggers>
	 						</Style>
	 					</TextBlock.Style>
	 				</TextBlock>
	 				<TextBlock VerticalAlignment="Center" Text="{Binding Path=Manager}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							Foreground="{Binding Path=ItemData.ManagerBrush}"
	 						FontWeight="Bold">
	 					<TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ZeroOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
	 					<TextBlock.Style>
	 						<Style TargetType="{x:Type TextBlock}">
	 							<Style.Triggers>
	 								<DataTrigger Binding="{Binding Path=ItemData.ShowManager}" Value="False">
	 									<Setter Property="Visibility" Value="Collapsed"/>
	 								</DataTrigger>
	 								<DataTrigger Binding="{Binding Path=Manager}" Value="">
	 									<Setter Property="Visibility" Value="Collapsed"/>
	 								</DataTrigger>
	  							</Style.Triggers>
	 						</Style>
	 					</TextBlock.Style>
	 				</TextBlock>
	 			</StackPanel>
 				<DataGrid AutoGenerateColumns="False"
 						  Width="{Binding Path=ActualWidth, ElementName=QsosBoxRectangle}"
 						  Background="Transparent" x:Name="DisplayDataGrid"
						  RowBackground="Transparent" 
						  GridLinesVisibility="None"
 						  Foreground="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
 						  HeadersVisibility="Column"
 						  Margin="0" CanUserAddRows="False"
 						  BorderBrush="Transparent"
 				          BorderThickness="0"
 						  HorizontalScrollBarVisibility="Hidden"
						  FontFamily="{Binding Path=ItemData.FontName}"
						  FontSize="{Binding Path=ItemData.FontSize}"
 						  Block.TextAlignment="Center"
		   				  IsHitTestVisible="False">
					<DataGrid.CellStyle>
 						<Style TargetType="DataGridCell">
 							<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
 							<Setter Property="BorderThickness" Value="1, 1, 1, 1"/>
 							<Setter Property="Background" Value="Transparent"/>
						</Style>
 					</DataGrid.CellStyle>
 					<DataGrid.ColumnHeaderStyle>
 						<Style TargetType="{x:Type DataGridColumnHeader}">
 							<Setter Property="Background" Value="Transparent"/>
 						</Style>
 					</DataGrid.ColumnHeaderStyle>
   					<DataGrid.Columns>
 						<DataGridTextColumn>
 							<DataGridTextColumn.ElementStyle>
 								<Style TargetType="{x:Type TextBlock}">
 									<Setter Property="Text" Value="{Binding Path=Date,
											Converter={StaticResource YYYYMMDDConverter}}"/>
									<Style.Triggers>
 										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
										Value="DD-MMM-YY">
 											<Setter Property="Text" Value="{Binding Path=Date,
											Converter={StaticResource DDMMMYYConverter}}"/>
 										</DataTrigger>
 										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
										Value="DD-MM-YY">
 											<Setter Property="Text" Value="{Binding Path=Date,
											Converter={StaticResource DDMMYYConverter}}"/>
 										</DataTrigger>
 									</Style.Triggers>
 								</Style>
 							</DataGridTextColumn.ElementStyle>
   							<DataGridTextColumn.HeaderStyle>
								<Style TargetType="DataGridColumnHeader">
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.YYYYMMDDText,
										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
	 											RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
												Value="DD-MMM-YY">
											<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.DDMMMYYText,
 													RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
	 											RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
												Value="DD-MM-YY">
											<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.DDMMYYText,
 													RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
 							</DataGridTextColumn.HeaderStyle>
    						</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Time}" CanUserReorder="True">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.TimeText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   	   					</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Path=Band}" x:Name="BandColumn">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.BandText,
  										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Path=Frequency}" x:Name="FrequencyColumn">
	  						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.FreqText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
  									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
   						<DataGridTextColumn Binding="{Binding Path=Mode}" CanUserReorder="True">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.ModeText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
	   							</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
   						<DataGridTextColumn Binding="{Binding Path=RST}" CanUserReorder="True">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.RSTText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
   						<DataGridTextColumn Binding="{Binding Path=Qsl, Converter={StaticResource PseTnxConverter}}" 
   								x:Name="QslColumn">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.QSLText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
 					</DataGrid.Columns>
  				</DataGrid>
 			</StackPanel>
		</Canvas>
		<Canvas x:Name="DesignCanvas" Opacity="0.4">
 			<Canvas.Style>
				<Style TargetType="{x:Type Canvas}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ItemData.IsInDesignMode}" Value="True">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Canvas.Style>
 			<Canvas.Clip>
				<CombinedGeometry GeometryCombineMode="Exclude">
					<CombinedGeometry.Geometry1>
					<RectangleGeometry Rect="-1000, -1000, 2600, 2600">
	 				</RectangleGeometry> 							
					</CombinedGeometry.Geometry1>
					<CombinedGeometry.Geometry2>
						<RectangleGeometry Rect="{Binding Path=ClipRectangle}"/>
					</CombinedGeometry.Geometry2>
				</CombinedGeometry>
 			</Canvas.Clip>
 			<StackPanel x:Name="DesignPanel">
	 			<StackPanel Orientation="Horizontal" Canvas.Left="{Binding Path=ConfirmingXOffset}"
	 						Canvas.Top="{Binding Path=ConfirmingYOffset}">
	 				<TextBlock Text="{Binding Path=ConfirmingDisplayText}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							Foreground="{Binding Path=ItemData.LineTextBrush}">
	 					<TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
	 				</TextBlock>
	 				<TextBlock VerticalAlignment="Center" Text="{Binding Path=Callsign}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							FontWeight="Bold"
							Foreground="{Binding Path=ItemData.CallsignBrush}"/>
	 				<TextBlock VerticalAlignment="Center" Text="{Binding Path=ItemData.ViaText}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							Foreground="{Binding Path=ItemData.ManagerBrush}">
	 					<TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ConfirmingXOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
	 					<TextBlock.Style>
	 						<Style TargetType="{x:Type TextBlock}">
	 							<Style.Triggers>
	 								<DataTrigger Binding="{Binding Path=ItemData.ShowManager}" Value="False">
	 									<Setter Property="Visibility" Value="Collapsed"/>
	 								</DataTrigger>
	  							</Style.Triggers>
	 						</Style>
	 					</TextBlock.Style>
	 				</TextBlock>
	 				<TextBlock VerticalAlignment="Center" Text="{Binding Path=Manager}"
							FontFamily="{Binding Path=ItemData.FontName}"
							FontSize="{Binding Path=ItemData.FontSize}"
							Foreground="{Binding Path=ItemData.ManagerBrush}"
	 						FontWeight="Bold">
	 					<TextBlock.Margin>
							<MultiBinding Converter="{StaticResource MarginConverter}">
	 							<Binding Path="ZeroOffset"/>
	 							<Binding Path="ConfirmingTopOffset"/>
	 							<Binding Path="ZeroOffset"/>
	 							<Binding Path="ConfirmingBottomOffset"/>
	 						</MultiBinding>
	 					</TextBlock.Margin>
	 					<TextBlock.Style>
	 						<Style TargetType="{x:Type TextBlock}">
	 							<Style.Triggers>
	 								<DataTrigger Binding="{Binding Path=ItemData.ShowManager}" Value="False">
	 									<Setter Property="Visibility" Value="Collapsed"/>
	 								</DataTrigger>
	  							</Style.Triggers>
	 						</Style>
	 					</TextBlock.Style>
	 				</TextBlock>
	 			</StackPanel>
 				<DataGrid ItemsSource="{Binding Qsos}" AutoGenerateColumns="False"
 						  Background="Transparent" x:Name="DesignDataGrid"
						  RowBackground="Transparent" 
						  GridLinesVisibility="None"
 						  Foreground="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
 						  HeadersVisibility="Column"
 						  Margin="0" CanUserAddRows="False"
 						  BorderBrush="Transparent"
 				          BorderThickness="0"
 						  HorizontalScrollBarVisibility="Hidden"
						  FontFamily="{Binding Path=ItemData.FontName}"
						  FontSize="{Binding Path=ItemData.FontSize}"
 						  Block.TextAlignment="Center"
		   				  IsHitTestVisible="False">
  					<DataGrid.CellStyle>
 						<Style TargetType="DataGridCell">
 							<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
 							<Setter Property="BorderThickness" Value="1, 1, 1, 1"/>
 							<Setter Property="Background" Value="Transparent"/>
						</Style>
 					</DataGrid.CellStyle>
 					<DataGrid.ColumnHeaderStyle>
 						<Style TargetType="{x:Type DataGridColumnHeader}">
 							<Setter Property="Background" Value="Transparent"/>
 						</Style>
 					</DataGrid.ColumnHeaderStyle>
   					<DataGrid.Columns>
 						<DataGridTextColumn>
 							<DataGridTextColumn.ElementStyle>
 								<Style TargetType="{x:Type TextBlock}">
 									<Setter Property="Text" Value="{Binding Path=Date,
											Converter={StaticResource YYYYMMDDConverter}}"/>
 									<Style.Triggers>
 										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
										Value="DD-MMM-YY">
 											<Setter Property="Text" Value="{Binding Path=Date,
											Converter={StaticResource DDMMMYYConverter}}"/>
 										</DataTrigger>
 										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
										Value="DD-MM-YY">
 											<Setter Property="Text" Value="{Binding Path=Date,
											Converter={StaticResource DDMMYYConverter}}"/>
 										</DataTrigger>
 									</Style.Triggers>
 								</Style>
 							</DataGridTextColumn.ElementStyle>
    							<DataGridTextColumn.HeaderStyle>
								<Style TargetType="DataGridColumnHeader">
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.YYYYMMDDText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
	 											RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
												Value="DD-MMM-YY">
											<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.DDMMMYYText,
 													RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=DataContext.ItemData.DateFormat,
	 											RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
												Value="DD-MM-YY">
											<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.DDMMYYText,
 													RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
										</DataTrigger>
									</Style.Triggers>
   								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Time}" CanUserReorder="True">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.TimeText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   	   					</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Path=Band}" x:Name="DesignBandColumn">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.BandText,
  										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  									</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Path=Frequency}" x:Name="DesignFrequencyColumn">
	  						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.FreqText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
  									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
   						<DataGridTextColumn Binding="{Binding Path=Mode}" CanUserReorder="True">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.ModeText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
	   							</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
   						<DataGridTextColumn Binding="{Binding Path=RST}" CanUserReorder="True">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.RSTText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
   						<DataGridTextColumn Binding="{Binding Path=Qsl, Converter={StaticResource PseTnxConverter}}" 
   									x:Name="DesignQslColumn">
	   						<DataGridTextColumn.HeaderStyle>
	 							<Style TargetType="DataGridColumnHeader">
   									<Setter Property="Content" Value="{Binding Path=DataContext.ItemData.QSLText,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
		 							<Setter Property="HorizontalAlignment" Value="Stretch"/>
		 							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
 									<Setter Property="BorderBrush" Value="{Binding Path=DataContext.ItemData.LineTextBrush,
 										RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
									<Setter Property="BorderThickness" Value="1, 2, 1, 1"/>
  								</Style>
 							</DataGridTextColumn.HeaderStyle>
   						</DataGridTextColumn>
 					</DataGrid.Columns>
  				</DataGrid>
 			</StackPanel>
			<Rectangle Width="{Binding Path=ItemData.DisplayWidth}"
					   Height="{Binding Path=ActualHeight, ElementName=DisplayPanel}"
					   StrokeThickness="2.0" Stroke="Transparent"
			           Fill="{Binding Path=ItemData.BackgroundBrush}"
			           Opacity="{Binding Path=ItemData.BackgroundOpacity}"
					   RadiusX="{Binding Path=CornerRounding}" 
			           RadiusY="{Binding Path=CornerRounding}"/>
			<Rectangle Width="{Binding Path=ItemData.DisplayWidth}"
					   Height="{Binding Path=ActualHeight, ElementName=DisplayPanel}"
					   StrokeThickness="2.0"
					   RadiusX="{Binding Path=CornerRounding}" 
			           RadiusY="{Binding Path=CornerRounding}"
			           Stroke="{Binding Path=ItemData.LineTextBrush}"/>
		</Canvas>
		<Rectangle Width="{Binding Path=ItemData.DisplayWidth}"
				   Height="{Binding Path=ActualHeight, ElementName=DisplayPanel}"
				   StrokeThickness="2.0" StrokeDashArray="5,3" x:Name="SelectRectangle"
				   RadiusX="{Binding Path=CornerRounding}" 
		           RadiusY="{Binding Path=CornerRounding}">
			<Rectangle.Style>
				<Style TargetType="{x:Type Rectangle}">
					<Setter Property="Stroke" Value="Transparent"/>
 					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ItemData.IsSelected}" Value="True">
							<Setter Property="Stroke" Value="Blue"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=ItemData.IsHighlighted}" Value="True">
							<Setter Property="Stroke" Value="OrangeRed"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Rectangle.Style>
		</Rectangle>		
	</Canvas>
</local:CardItemView>