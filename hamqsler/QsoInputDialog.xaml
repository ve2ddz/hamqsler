<!--
   Author:
        Jim Orcheson <jimorcheson@gmail.com>
  
   Copyright © 2012, 2013 Jim Orcheson
  
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
  
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
  
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<Window x:Class="hamqsler.QsoInputDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:hamqsler"
	Title="Input QSO" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
	<Window.Resources>
		<Style TargetType="{x:Type TextBox}">
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="True">
					<Setter Property="ToolTip"
						Value="{Binding RelativeSource={RelativeSource Self},
								Path=(Validation.Errors)[0].ErrorContent}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="{x:Type ComboBox}">
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="True">
					<Setter Property="ToolTip"
						Value="{Binding RelativeSource={RelativeSource Self},
								Path=(Validation.Errors)[0].ErrorContent}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="{x:Static local:QsoInputDialog.AddButtonCommand}"
						CanExecute="AddButtonCommand_CanExecute"
						Executed="AddButtonCommand_Executed"/>
		<CommandBinding Command="{x:Static local:QsoInputDialog.OkButtonCommand}"
						CanExecute="OkButtonCommand_CanExecute"
						Executed="OkButtonCommand_Executed"/>
		<CommandBinding	Command="{x:Static local:QsoInputDialog.CancelButtonCommand}"
						Executed="CancelButtonCommand_Executed"/>
	</Window.CommandBindings>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<TextBlock Grid.Row="0" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
				VerticalAlignment="Center">Callsign:</TextBlock>
		<TextBox Name="CallsignBox" Grid.Row="0" Grid.Column="1" Margin="5" HorizontalAlignment="Left"
				MinWidth="96" MaxLength="15"
				PreviewTextInput="CallsignBox_PreviewTextInput" CharacterCasing="Upper">
			<TextBox.Text>
				<Binding Path="Callsign"
				UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
					<Binding.ValidationRules>
						<DataErrorValidationRule/>
					</Binding.ValidationRules>
				</Binding>
			</TextBox.Text>
		</TextBox>
		<TextBlock Grid.Row="1" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
				VerticalAlignment="Center">Manager (optional):</TextBlock>
		<TextBox Name="ManagerBox" Grid.Row="1" Grid.Column="1" Margin="5" HorizontalAlignment="Left"
				MinWidth="96" MaxLength="15"
				PreviewTextInput="ManagerBox_PreviewTextInput" CharacterCasing="Upper">
			<TextBox.Text>
				<Binding Path="Manager"
				UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
					<Binding.ValidationRules>
						<DataErrorValidationRule/>
					</Binding.ValidationRules>
				</Binding>
			</TextBox.Text>
		</TextBox>
		<TextBlock Grid.Row="2" Grid.Column="0" Margin="5"
				HorizontalAlignment="Right" VerticalAlignment="Center"
				>Start Date (YYYYMMDD):</TextBlock>
		<TextBox Name="StartDateBox" Grid.Row="2" Grid.Column="1" Margin="5" HorizontalAlignment="Left"
				MinWidth="96" MaxLength="8"
				PreviewTextInput="StartDateBox_PreviewTextInput">
			<TextBox.Text>
				<Binding Path="StartDate"
				UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
					<Binding.ValidationRules>
						<DataErrorValidationRule/>
					</Binding.ValidationRules>
				</Binding>
			</TextBox.Text>
		</TextBox>
		<TextBlock Grid.Row="3" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
				VerticalAlignment="Center">Start Time (HHMMSS or HHMM):</TextBlock>
		<TextBox Name="StartTimeBox" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left"
				Margin="5" MinWidth="96" MaxLength="6"
				PreviewTextInput="StartTimeBox_PreviewTextInput">
			<TextBox.Text>
				<Binding Path="StartTime"
				UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
					<Binding.ValidationRules>
						<DataErrorValidationRule/>
					</Binding.ValidationRules>
				</Binding>
			</TextBox.Text>
		</TextBox>
		<TextBlock Grid.Row="4" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
				VerticalAlignment="Center">Mode:</TextBlock>
		<ComboBox Name="ModeComboBox" Grid.Row="4" Grid.Column="1" Margin="5"
				HorizontalAlignment="Left" MinWidth="96" MaxDropDownHeight="150"
				SelectionChanged="ModeComboBox_SelectionChanged">
			<ComboBox.Text>
				<Binding Path="Mode"
				UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
					<Binding.ValidationRules>
						<DataErrorValidationRule/>
					</Binding.ValidationRules>
				</Binding>
			</ComboBox.Text>
		</ComboBox>
		<TextBlock Grid.Row="5" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
				VerticalAlignment="Center">Submode (optional):</TextBlock>
		<ComboBox Name="SubmodeComboBox" Grid.Row="5" Grid.Column="1" Margin="5"
				HorizontalAlignment="Left" MinWidth="96" MaxDropDownHeight="150"
				IsEditable="True" GotKeyboardFocus="SubmodeComboBox_GotKeyboardFocus">
			<ComboBox.Text>
				<Binding Path="Submode"
				UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
					<Binding.ValidationRules>
						<DataErrorValidationRule/>
					</Binding.ValidationRules>
				</Binding>
			</ComboBox.Text>
		</ComboBox>
		<TextBlock Grid.Row="6" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
				VerticalAlignment="Center">RS(T/Q) or dB (optional):</TextBlock>
		<TextBox Name="RstBox" Grid.Row="6" Grid.Column="1" Margin="5" HorizontalAlignment="Left"
				ToolTip="Signal report sent to the contacted station" MinWidth="96" MaxLength="3"
				Text="{Binding RST, Mode=TwoWay}" PreviewTextInput="RstBox_PreviewTextInput"/>
		<GroupBox Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Margin="5" 
				Header="Band or Frequency">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
						VerticalAlignment="Center">Band:</TextBlock>
				<ComboBox Name="BandComboBox" Grid.Row="0" Grid.Column="1" Margin="5" 
				          HorizontalAlignment="Left" MinWidth="96" MaxDropDownHeight="150">
					<ComboBox.Text>
						<Binding Path="Band"
						UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
							<Binding.ValidationRules>
								<DataErrorValidationRule/>
							</Binding.ValidationRules>
						</Binding>
					</ComboBox.Text>
					<ComboBoxItem>2190m</ComboBoxItem>
					<ComboBoxItem>560m</ComboBoxItem>
					<ComboBoxItem>160m</ComboBoxItem>
					<ComboBoxItem>80m</ComboBoxItem>
					<ComboBoxItem>60m</ComboBoxItem>
					<ComboBoxItem>40m</ComboBoxItem>
					<ComboBoxItem>30m</ComboBoxItem>
					<ComboBoxItem>20m</ComboBoxItem>
					<ComboBoxItem>17m</ComboBoxItem>
					<ComboBoxItem>15m</ComboBoxItem>
					<ComboBoxItem>12m</ComboBoxItem>
					<ComboBoxItem>10m</ComboBoxItem>
					<ComboBoxItem>6m</ComboBoxItem>
					<ComboBoxItem>4m</ComboBoxItem>
					<ComboBoxItem>2m</ComboBoxItem>
					<ComboBoxItem>1.25m</ComboBoxItem>
					<ComboBoxItem>70cm</ComboBoxItem>
					<ComboBoxItem>33cm</ComboBoxItem>
					<ComboBoxItem>23cm</ComboBoxItem>
					<ComboBoxItem>13cm</ComboBoxItem>
					<ComboBoxItem>9cm</ComboBoxItem>
					<ComboBoxItem>6cm</ComboBoxItem>
					<ComboBoxItem>3cm</ComboBoxItem>
					<ComboBoxItem>1.25cm</ComboBoxItem>
					<ComboBoxItem>6mm</ComboBoxItem>
					<ComboBoxItem>4mm</ComboBoxItem>
					<ComboBoxItem>2.5mm</ComboBoxItem>
					<ComboBoxItem>2mm</ComboBoxItem>
					<ComboBoxItem>1mm</ComboBoxItem>
				</ComboBox>
				<TextBlock Grid.Row="1" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
						VerticalAlignment="Center">Frequency (MHz):</TextBlock>
				<TextBox Name="FrequencyBox" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left"
						 Margin="5" MinWidth="96" MaxLength="10"
						PreviewTextInput="FrequencyBox_PreviewTextInput">
					<TextBox.Text>
						<Binding Path="Frequency"
						UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
							<Binding.ValidationRules>
								<DataErrorValidationRule/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
			</Grid>
		</GroupBox>
		<GroupBox Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" Margin="5"
				Header="QSL (optional)">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
						VerticalAlignment="Center">Rcvd:</TextBlock>
				<ComboBox Name="RcvdComboBox" Grid.Row="0" Grid.Column="1" Margin="5"
				 		HorizontalAlignment="Left" MinWidth="96"
						Text="{Binding Rcvd, Mode=TwoWay}">
					<ComboBoxItem>Yes</ComboBoxItem>
					<ComboBoxItem>No</ComboBoxItem>
					<ComboBoxItem>Requested</ComboBoxItem>
					<ComboBoxItem>Ignore</ComboBoxItem>
					<ComboBoxItem>Verified</ComboBoxItem>					
				</ComboBox>
				<TextBlock Grid.Row="1" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
						VerticalAlignment="Center">Sent:</TextBlock>
				<ComboBox Name="SentComboBox" Grid.Row="1" Grid.Column="1" Margin="5"
						HorizontalAlignment="Left" MinWidth="96"
						Text="{Binding Sent, Mode=TwoWay}">
					<ComboBoxItem>Yes</ComboBoxItem>
					<ComboBoxItem>No</ComboBoxItem>
					<ComboBoxItem>Requested</ComboBoxItem>
					<ComboBoxItem>Queued</ComboBoxItem>
					<ComboBoxItem>Ignore</ComboBoxItem>
				</ComboBox>
				<TextBlock Grid.Row="2" Grid.Column="0" Margin="5" HorizontalAlignment="Right"
						VerticalAlignment="Center">Sent Via:</TextBlock>
				<ComboBox Name="SentViaComboBox" Grid.Row="2" Grid.Column="1" Margin="5"
						HorizontalAlignment="Left" MinWidth="96"
						Text="{Binding SentVia, Mode=TwoWay}">
					<ComboBoxItem>Bureau</ComboBoxItem>
					<ComboBoxItem>Direct</ComboBoxItem>
					<ComboBoxItem>Electronic</ComboBoxItem>
				</ComboBox>
			</Grid>
		</GroupBox>
		<Separator Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Margin="5"/>
		<Grid Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Button Name="AddButton" Grid.Row="0" Grid.Column="1" Margin="5"
					MinWidth="75" ToolTip="Add this QSO to list"
					Command="{x:Static local:QsoInputDialog.AddButtonCommand}">Add+</Button>
			<Button Name="OkButton" Grid.Row="0" Grid.Column="2" Margin="5"
					MinWidth="75" ToolTip="Add this QSO to list and close dialog"
					IsDefault="True"
					Command="{x:Static local:QsoInputDialog.OkButtonCommand}">OK</Button>
			<Button Name="CancelButton" Grid.Row="0" Grid.Column="3" Margin="5"
					MinWidth="75" ToolTip="Close dialog without adding this QSO"
					IsCancel="True"
					Command="{x:Static local:QsoInputDialog.CancelButtonCommand}">Cancel</Button>
		</Grid>
	</Grid>
</Window>