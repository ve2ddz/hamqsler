<!--
   Author:
        Jim Orcheson <jimorcheson@gmail.com>
  
   Copyright © 2012, 2013 Jim Orcheson
  
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
  
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
  
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<local:CardItemView x:Class="hamqsler.TextItemView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:hamqsler"
	Canvas.Left="{Binding Path=ItemData.DisplayX}" Canvas.Top="{Binding Path=ItemData.DisplayY}">
	<Canvas>
		<Canvas x:Name="DisplayCanvas">
 			<Canvas.Clip>
				<RectangleGeometry Rect="{Binding Path=ClipRectangle}"/>
			</Canvas.Clip>
			<StackPanel Orientation="Horizontal" >
				<Rectangle Width="{Binding Path=CheckBoxSize}"
							Height="{Binding Path=CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Left="{Binding Path=CheckBoxBeforeLeftOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxBefore}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
				<TextBlock Text="{Binding Path=DisplayText, Mode=OneWay}"
							FontFamily="{Binding Path=ItemData.TextFontFace, Mode=OneWay}"
							FontSize="{Binding Path=ItemData.FontSize, Mode=OneWay}"
							FontWeight="{Binding Path=ItemData.TextFontWeight, Mode=OneWay}"
							Foreground="{Binding Path=ItemData.TextBrush}">
					<TextBlock.Style>
						<Style TargetType="{x:Type TextBlock}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ItemData.IsItalic}" Value="True">
									<Setter Property="FontStyle" Value="Italic"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Rectangle Width="{Binding Path=CheckBoxSize}"
							Height="{Binding Path=CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Right="{Binding Path=CheckBoxAfterRightOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxAfter}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
		</StackPanel>
		</Canvas>
		<Canvas x:Name="DesignCanvas" Opacity="0.4">
			<Canvas.Style>
				<Style TargetType="{x:Type Canvas}">
					<Setter Property="Visibility" Value="Hidden"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ItemData.IsInDesignMode}" Value="True">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Canvas.Style>
			<Canvas.Clip>
				<CombinedGeometry GeometryCombineMode="Exclude">
					<CombinedGeometry.Geometry1>
					<RectangleGeometry Rect="-1000, -1000, 2600, 2600">
	 				</RectangleGeometry> 							
					</CombinedGeometry.Geometry1>
					<CombinedGeometry.Geometry2>
						<RectangleGeometry Rect="{Binding Path=ClipRectangle}"/>
					</CombinedGeometry.Geometry2>
				</CombinedGeometry>
 			</Canvas.Clip>
			<StackPanel Orientation="Horizontal" >
				<Rectangle Width="{Binding Path=CheckBoxSize}"
							Height="{Binding Path=CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Left="{Binding Path=CheckBoxBeforeLeftOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxBefore}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
				<TextBlock Text="{Binding Path=DisplayText, Mode=OneWay}"
							FontFamily="{Binding Path=ItemData.TextFontFace, Mode=OneWay}"
							FontSize="{Binding Path=ItemData.FontSize, Mode=OneWay}"
							FontWeight="{Binding Path=ItemData.TextFontWeight, Mode=OneWay}"
							Foreground="{Binding Path=ItemData.TextBrush}">
					<TextBlock.Style>
						<Style TargetType="{x:Type TextBlock}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ItemData.IsItalic}" Value="True">
									<Setter Property="FontStyle" Value="Italic"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Rectangle Width="{Binding Path=CheckBoxSize}"
							Height="{Binding Path=CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Right="{Binding Path=CheckBoxAfterRightOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxAfter}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
		</StackPanel>
		</Canvas>
		<Rectangle Width="{Binding Path=ItemData.DisplayWidth}"
					Height="{Binding Path=ItemData.DisplayHeight}"
					StrokeThickness="2.0" StrokeDashArray="5,3" x:Name="SelectRectangle">
			<Rectangle.Style>
				<Style TargetType="{x:Type Rectangle}">
					<Setter Property="Stroke" Value="Transparent"/>
 					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ItemData.IsSelected}" Value="True">
							<Setter Property="Stroke" Value="Blue"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=ItemData.IsHighlighted}" Value="True">
							<Setter Property="Stroke" Value="OrangeRed"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Rectangle.Style>
		</Rectangle>
	</Canvas>

</local:CardItemView>