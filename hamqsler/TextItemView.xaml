<local:CardItemView x:Class="hamqsler.TextItemView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:hamqsler"
	Canvas.Left="{Binding Path=ItemData.DisplayX}" Canvas.Top="{Binding Path=ItemData.DisplayY}">
	<local:CardItemView.Resources>
		<local:RectConverter x:Key="RectConverter"/>
	</local:CardItemView.Resources>
	<Canvas>
		<Canvas>
 			<Canvas.Clip>
				<RectangleGeometry>
 					<RectangleGeometry.Rect>
						<MultiBinding Converter="{StaticResource RectConverter}">
 							<Binding Path="ItemData.ClipRectangle.X"/>
 							<Binding Path="ItemData.ClipRectangle.Y"/>
 							<Binding Path="ItemData.QslCard.DisplayWidth"/>
 							<Binding Path="ItemData.QslCard.DisplayHeight"/>
 						</MultiBinding>
					</RectangleGeometry.Rect>
 				</RectangleGeometry>
			</Canvas.Clip>
			<StackPanel Orientation="Horizontal" >
				<Rectangle Width="{Binding Path=ItemData.CheckBoxSize}"
							Height="{Binding Path=ItemData.CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Left="{Binding Path=ItemData.CheckBoxBeforeLeftOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=ItemData.CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxBefore}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
				<TextBlock Text="{Binding Path=ItemData.DisplayText, Mode=OneWay}"
							FontFamily="{Binding Path=ItemData.TextFontFace, Mode=OneWay}"
							FontSize="{Binding Path=ItemData.FontSize, Mode=OneWay}"
							FontWeight="{Binding Path=ItemData.TextFontWeight, Mode=OneWay}"
							Foreground="{Binding Path=ItemData.TextBrush}">
					<TextBlock.Style>
						<Style TargetType="{x:Type TextBlock}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ItemData.IsItalic}" Value="True">
									<Setter Property="FontStyle" Value="Italic"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Rectangle Width="{Binding Path=ItemData.CheckBoxSize}"
							Height="{Binding Path=ItemData.CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Right="{Binding Path=ItemData.CheckBoxAfterRightOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=ItemData.CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxAfter}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
		</StackPanel>
		</Canvas>
		<Canvas Opacity="0.4">
			<Canvas.Style>
				<Style TargetType="{x:Type Canvas}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ItemData.IsInDesignMode}" Value="True">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Canvas.Style>
			<Canvas.Clip>
				<CombinedGeometry GeometryCombineMode="Exclude">
					<CombinedGeometry.Geometry1>
					<RectangleGeometry Rect="-300, -300, 1200, 1200">
	 				</RectangleGeometry> 							
					</CombinedGeometry.Geometry1>
					<CombinedGeometry.Geometry2>
					<RectangleGeometry>
	 					<RectangleGeometry.Rect>
							<MultiBinding Converter="{StaticResource RectConverter}">
	 							<Binding Path="ItemData.ClipRectangle.X"/>
	 							<Binding Path="ItemData.ClipRectangle.Y"/>
	 							<Binding Path="ItemData.QslCard.DisplayWidth"/>
	 							<Binding Path="ItemData.QslCard.DisplayHeight"/>
	 						</MultiBinding>
						</RectangleGeometry.Rect>
	 				</RectangleGeometry>
				</CombinedGeometry.Geometry2>
				</CombinedGeometry>
 			</Canvas.Clip>
			<StackPanel Orientation="Horizontal" >
				<Rectangle Width="{Binding Path=ItemData.CheckBoxSize}"
							Height="{Binding Path=ItemData.CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Left="{Binding Path=ItemData.CheckBoxBeforeLeftOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=ItemData.CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxBefore}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
				<TextBlock Text="{Binding Path=ItemData.DisplayText, Mode=OneWay}"
							FontFamily="{Binding Path=ItemData.TextFontFace, Mode=OneWay}"
							FontSize="{Binding Path=ItemData.FontSize, Mode=OneWay}"
							FontWeight="{Binding Path=ItemData.TextFontWeight, Mode=OneWay}"
							Foreground="{Binding Path=ItemData.TextBrush}">
					<TextBlock.Style>
						<Style TargetType="{x:Type TextBlock}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ItemData.IsItalic}" Value="True">
									<Setter Property="FontStyle" Value="Italic"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Rectangle Width="{Binding Path=ItemData.CheckBoxSize}"
							Height="{Binding Path=ItemData.CheckBoxSize}"
							StrokeThickness="{Binding Path=ItemData.CheckboxLineThickness}"
							Canvas.Right="{Binding Path=ItemData.CheckBoxAfterRightOffset}"
				            Fill="Transparent"
							VerticalAlignment="Center" Margin="{Binding Path=ItemData.CheckBoxMargin}">
					<Rectangle.Style>
						<Style TargetType="{x:Type Rectangle}">
							<Setter Property="Stroke" Value="Transparent"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=ItemData.CheckboxAfter}" Value="True">
									<Setter Property="Stroke" Value="{Binding Path=ItemData.TextBrush}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Rectangle.Style>
				</Rectangle>
		</StackPanel>
		</Canvas>
		<Rectangle Width="{Binding Path=ItemData.DisplayWidth}"
					Height="{Binding Path=ItemData.DisplayHeight}"
					StrokeThickness="2.0" StrokeDashArray="5,3">
			<Rectangle.Style>
				<Style TargetType="{x:Type Rectangle}">
					<Setter Property="Stroke" Value="Transparent"/>
 					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ItemData.IsSelected}" Value="True">
							<Setter Property="Stroke" Value="Blue"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=ItemData.IsHighlighted}" Value="True">
							<Setter Property="Stroke" Value="OrangeRed"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Rectangle.Style>
		</Rectangle>
	</Canvas>

</local:CardItemView>